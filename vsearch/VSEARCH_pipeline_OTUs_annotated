#!/bin/sh

#number of threads, VSEARCH version, and PERL version
THREADS=1
VSEARCH=vsearch
PERL=perl

#recognize forward and reverse sequences

for f in *_R1_*.fastq; do

r=$(sed -e "s/_R1_/_R2_/" <<< "$f")
s=$(cut -d_ -f1 <<< "$f")

echo

echo =================
echo Processing sample $s
echo =================

#merge pairs with reverse defined by for loop above, merges with min length 100 and relabels eacch with @

$VSEARCH --fastq_mergepairs $f \
--threads $THREADS \
--reverse $r \
--fastq_minmergelen 100 \
--relabel @ \
--fastqout $s.merged.fastq

echo
echo Calculate quality statistics

$VSEARCH --fastq_eestats $s.merged.fastq \
--output $s.stats

echo
echo Quality filtering and remove primers

#maxee 1.0 but should change to 0.5 for another run and compare, strip my primers, which you will have to change depending
#on the size of your primers. fasta_width 0 tells the output not to wrap but to start new lines per sequence

$VSEARCH --fastq_filter $s.merged.fastq \
--fastq_maxee 1.0 \
--fastq_stripleft 26 \
--fastq_stripright 26 \
--fastaout $s.filtered.fasta \
--fasta_width 0

echo
echo Dereplicate at sample level and relabel with sample_n

#makes uniques fasta with cluster size annotation for each. strand plus says it only looks at plus strand

$VSEARCH --derep_fulllength $s.filtered.fasta \
--strand plus \
--output $s.derep.fasta \
--sizeout \
--uc $s.derep.uc \
--relabel $s. \
--fasta_width 0

done

echo
echo Sum of unique sequences in each sample: $(cat *.derep.fasta | grep -c "^>")

echo
echo ==================
echo Processing all samples together
echo ==================

echo
echo Merge all samples

#if you have run this multiple times, next lines will remove anything that already exists and then
#concatenate all the individual sample dereps into one fasta for the next steps

rm -f all.derep.fasta all.nonchimeras.derep.fasta
cat *.derep.fasta > all.fasta

echo
echo Dereplicate across samples, I kept singletons

#this dereps across all samples finding uniqeus across samples. i kept singletons.

$VSEARCH --derep_fulllength all.fasta \
--sizein \
--sizeout \
--fasta_width 0 \
--uc all.derep.uc \
--output all.derep.fasta

echo Unique sequences including singletons: $(grep -c "^>" all.derep.fasta)

echo
echo Precluster at 98% before chimera detection

# sizein command lets clustering happen considering the size of the input sequence cluster (equals to sortbysize in usearch)
$VSEARCH --cluster_size all.derep.fasta \
--threads $THREADS \
--id 0.98 \
--strand plus \
--sizein \
--sizeout \
--fasta_width 0 \
--uc all.preclustered.uc \
--centroids all.preclustered.fasta

echo Unique sequences after preclustering: $(grep -c "^>" all.preclustered.fasta)

echo
echo De novo chimera detection

$VSEARCH --uchime_denovo all.preclustered.fasta \
--sizein \
--sizeout \
--fasta_width 0 \
--nonchimeras all.denovo.nonchimeras.fasta \

echo Unique sequences after de novo chimera detection: $(grep -c "^>" all.denovo.nonchimeras.fasta)

echo
echo Extract all non-chimeric sequences, dereplicated
#this is perl script that extracts only non-chimeras

$PERL map.pl all.derep.fasta all.preclustered.uc all.denovo.nonchimeras.fasta > all.nonchimeras.derep.fasta

echo Unique non-chimeric sequences: $(grep -c "^>" all.nonchimeras.derep.fasta)

echo
echo Extract all non-chimeric sequences in each sample
#this does the same but for each sample

$PERL map.pl all.fasta all.derep.uc all.nonchimeras.derep.fasta > all.nonchimeras.fasta

echo Sum of unique non-chimeric sequences in each sample: $(grep -c "^>" all.nonchimeras.fasta)

echo
echo Cluster at 97% and relabel with OTU_n, generate OTU table

#this next set creates both the all.otus.fasta that you will BLAST and the all.otutb.txt which creates OTU Table

$VSEARCH --cluster_size all.nonchimeras.fasta \
--threads $THREADS \
--id 0.97 \
--strand plus \
--sizein \
--sizeout \
--fasta_width 0 \
--uc all.clustered.uc \
--relabel OTU_ \
--centroids all.otus.fasta \
--otutabout all.otutab.txt

echo
echo Number of OTUs: $(grep -c "^>" all.otus.fasta)

echo
echo Done

date
